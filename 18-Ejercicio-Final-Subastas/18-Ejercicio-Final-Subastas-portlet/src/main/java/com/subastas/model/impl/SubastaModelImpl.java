package com.subastas.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.subastas.model.Subasta;
import com.subastas.model.SubastaModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Subasta service. Represents a row in the &quot;Subastas&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.subastas.model.SubastaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SubastaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SubastaImpl
 * @see com.subastas.model.Subasta
 * @see com.subastas.model.SubastaModel
 * @generated
 */
public class SubastaModelImpl extends BaseModelImpl<Subasta>
    implements SubastaModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a subasta model instance should use the {@link com.subastas.model.Subasta} interface instead.
     */
    public static final String TABLE_NAME = "Subastas";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "producto", Types.VARCHAR },
            { "estado", Types.VARCHAR },
            { "pujaInicial", Types.DOUBLE },
            { "pujaMaxima", Types.DOUBLE },
            { "pujadorId", Types.BIGINT },
            { "pujadorName", Types.VARCHAR },
            { "fechaFin", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table Subastas (id_ LONG not null primary key,groupId LONG,companyId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,producto VARCHAR(75) null,estado VARCHAR(75) null,pujaInicial DOUBLE,pujaMaxima DOUBLE,pujadorId LONG,pujadorName VARCHAR(75) null,fechaFin DATE null)";
    public static final String TABLE_SQL_DROP = "drop table Subastas";
    public static final String ORDER_BY_JPQL = " ORDER BY subasta.estado ASC, subasta.producto ASC";
    public static final String ORDER_BY_SQL = " ORDER BY Subastas.estado ASC, Subastas.producto ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.subastas.model.Subasta"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.subastas.model.Subasta"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.subastas.model.Subasta"),
            true);
    public static long ESTADO_COLUMN_BITMASK = 1L;
    public static long PRODUCTO_COLUMN_BITMASK = 2L;
    public static long PUJADORID_COLUMN_BITMASK = 4L;
    public static long USERID_COLUMN_BITMASK = 8L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.subastas.model.Subasta"));
    private static ClassLoader _classLoader = Subasta.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Subasta.class
        };
    private long _id;
    private long _groupId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private long _originalUserId;
    private boolean _setOriginalUserId;
    private Date _createDate;
    private Date _modifiedDate;
    private String _producto;
    private String _originalProducto;
    private String _estado;
    private String _originalEstado;
    private double _pujaInicial;
    private double _pujaMaxima;
    private long _pujadorId;
    private long _originalPujadorId;
    private boolean _setOriginalPujadorId;
    private String _pujadorName;
    private Date _fechaFin;
    private long _columnBitmask;
    private Subasta _escapedModel;

    public SubastaModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Subasta.class;
    }

    @Override
    public String getModelClassName() {
        return Subasta.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("groupId", getGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("producto", getProducto());
        attributes.put("estado", getEstado());
        attributes.put("pujaInicial", getPujaInicial());
        attributes.put("pujaMaxima", getPujaMaxima());
        attributes.put("pujadorId", getPujadorId());
        attributes.put("pujadorName", getPujadorName());
        attributes.put("fechaFin", getFechaFin());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String producto = (String) attributes.get("producto");

        if (producto != null) {
            setProducto(producto);
        }

        String estado = (String) attributes.get("estado");

        if (estado != null) {
            setEstado(estado);
        }

        Double pujaInicial = (Double) attributes.get("pujaInicial");

        if (pujaInicial != null) {
            setPujaInicial(pujaInicial);
        }

        Double pujaMaxima = (Double) attributes.get("pujaMaxima");

        if (pujaMaxima != null) {
            setPujaMaxima(pujaMaxima);
        }

        Long pujadorId = (Long) attributes.get("pujadorId");

        if (pujadorId != null) {
            setPujadorId(pujadorId);
        }

        String pujadorName = (String) attributes.get("pujadorName");

        if (pujadorName != null) {
            setPujadorName(pujadorName);
        }

        Date fechaFin = (Date) attributes.get("fechaFin");

        if (fechaFin != null) {
            setFechaFin(fechaFin);
        }
    }

    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _groupId = groupId;
    }

    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _columnBitmask |= USERID_COLUMN_BITMASK;

        if (!_setOriginalUserId) {
            _setOriginalUserId = true;

            _originalUserId = _userId;
        }

        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    public long getOriginalUserId() {
        return _originalUserId;
    }

    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getProducto() {
        if (_producto == null) {
            return StringPool.BLANK;
        } else {
            return _producto;
        }
    }

    @Override
    public void setProducto(String producto) {
        _columnBitmask = -1L;

        if (_originalProducto == null) {
            _originalProducto = _producto;
        }

        _producto = producto;
    }

    public String getOriginalProducto() {
        return GetterUtil.getString(_originalProducto);
    }

    @Override
    public String getEstado() {
        if (_estado == null) {
            return StringPool.BLANK;
        } else {
            return _estado;
        }
    }

    @Override
    public void setEstado(String estado) {
        _columnBitmask = -1L;

        if (_originalEstado == null) {
            _originalEstado = _estado;
        }

        _estado = estado;
    }

    public String getOriginalEstado() {
        return GetterUtil.getString(_originalEstado);
    }

    @Override
    public double getPujaInicial() {
        return _pujaInicial;
    }

    @Override
    public void setPujaInicial(double pujaInicial) {
        _pujaInicial = pujaInicial;
    }

    @Override
    public double getPujaMaxima() {
        return _pujaMaxima;
    }

    @Override
    public void setPujaMaxima(double pujaMaxima) {
        _pujaMaxima = pujaMaxima;
    }

    @Override
    public long getPujadorId() {
        return _pujadorId;
    }

    @Override
    public void setPujadorId(long pujadorId) {
        _columnBitmask |= PUJADORID_COLUMN_BITMASK;

        if (!_setOriginalPujadorId) {
            _setOriginalPujadorId = true;

            _originalPujadorId = _pujadorId;
        }

        _pujadorId = pujadorId;
    }

    public long getOriginalPujadorId() {
        return _originalPujadorId;
    }

    @Override
    public String getPujadorName() {
        if (_pujadorName == null) {
            return StringPool.BLANK;
        } else {
            return _pujadorName;
        }
    }

    @Override
    public void setPujadorName(String pujadorName) {
        _pujadorName = pujadorName;
    }

    @Override
    public Date getFechaFin() {
        return _fechaFin;
    }

    @Override
    public void setFechaFin(Date fechaFin) {
        _fechaFin = fechaFin;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            Subasta.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Subasta toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Subasta) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        SubastaImpl subastaImpl = new SubastaImpl();

        subastaImpl.setId(getId());
        subastaImpl.setGroupId(getGroupId());
        subastaImpl.setCompanyId(getCompanyId());
        subastaImpl.setUserId(getUserId());
        subastaImpl.setCreateDate(getCreateDate());
        subastaImpl.setModifiedDate(getModifiedDate());
        subastaImpl.setProducto(getProducto());
        subastaImpl.setEstado(getEstado());
        subastaImpl.setPujaInicial(getPujaInicial());
        subastaImpl.setPujaMaxima(getPujaMaxima());
        subastaImpl.setPujadorId(getPujadorId());
        subastaImpl.setPujadorName(getPujadorName());
        subastaImpl.setFechaFin(getFechaFin());

        subastaImpl.resetOriginalValues();

        return subastaImpl;
    }

    @Override
    public int compareTo(Subasta subasta) {
        int value = 0;

        value = getEstado().compareTo(subasta.getEstado());

        if (value != 0) {
            return value;
        }

        value = getProducto().compareTo(subasta.getProducto());

        if (value != 0) {
            return value;
        }

        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Subasta)) {
            return false;
        }

        Subasta subasta = (Subasta) obj;

        long primaryKey = subasta.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        SubastaModelImpl subastaModelImpl = this;

        subastaModelImpl._originalUserId = subastaModelImpl._userId;

        subastaModelImpl._setOriginalUserId = false;

        subastaModelImpl._originalProducto = subastaModelImpl._producto;

        subastaModelImpl._originalEstado = subastaModelImpl._estado;

        subastaModelImpl._originalPujadorId = subastaModelImpl._pujadorId;

        subastaModelImpl._setOriginalPujadorId = false;

        subastaModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Subasta> toCacheModel() {
        SubastaCacheModel subastaCacheModel = new SubastaCacheModel();

        subastaCacheModel.id = getId();

        subastaCacheModel.groupId = getGroupId();

        subastaCacheModel.companyId = getCompanyId();

        subastaCacheModel.userId = getUserId();

        Date createDate = getCreateDate();

        if (createDate != null) {
            subastaCacheModel.createDate = createDate.getTime();
        } else {
            subastaCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            subastaCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            subastaCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        subastaCacheModel.producto = getProducto();

        String producto = subastaCacheModel.producto;

        if ((producto != null) && (producto.length() == 0)) {
            subastaCacheModel.producto = null;
        }

        subastaCacheModel.estado = getEstado();

        String estado = subastaCacheModel.estado;

        if ((estado != null) && (estado.length() == 0)) {
            subastaCacheModel.estado = null;
        }

        subastaCacheModel.pujaInicial = getPujaInicial();

        subastaCacheModel.pujaMaxima = getPujaMaxima();

        subastaCacheModel.pujadorId = getPujadorId();

        subastaCacheModel.pujadorName = getPujadorName();

        String pujadorName = subastaCacheModel.pujadorName;

        if ((pujadorName != null) && (pujadorName.length() == 0)) {
            subastaCacheModel.pujadorName = null;
        }

        Date fechaFin = getFechaFin();

        if (fechaFin != null) {
            subastaCacheModel.fechaFin = fechaFin.getTime();
        } else {
            subastaCacheModel.fechaFin = Long.MIN_VALUE;
        }

        return subastaCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(27);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", producto=");
        sb.append(getProducto());
        sb.append(", estado=");
        sb.append(getEstado());
        sb.append(", pujaInicial=");
        sb.append(getPujaInicial());
        sb.append(", pujaMaxima=");
        sb.append(getPujaMaxima());
        sb.append(", pujadorId=");
        sb.append(getPujadorId());
        sb.append(", pujadorName=");
        sb.append(getPujadorName());
        sb.append(", fechaFin=");
        sb.append(getFechaFin());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(43);

        sb.append("<model><model-name>");
        sb.append("com.subastas.model.Subasta");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>producto</column-name><column-value><![CDATA[");
        sb.append(getProducto());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>estado</column-name><column-value><![CDATA[");
        sb.append(getEstado());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>pujaInicial</column-name><column-value><![CDATA[");
        sb.append(getPujaInicial());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>pujaMaxima</column-name><column-value><![CDATA[");
        sb.append(getPujaMaxima());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>pujadorId</column-name><column-value><![CDATA[");
        sb.append(getPujadorId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>pujadorName</column-name><column-value><![CDATA[");
        sb.append(getPujadorName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fechaFin</column-name><column-value><![CDATA[");
        sb.append(getFechaFin());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
